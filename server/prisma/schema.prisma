// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id             Int     @id @default(autoincrement())
  email          String  @unique
  first_name     String
  last_name      String
  bio            String  @default("")
  avatar         String  @default("")
  hashedPassword String?

  accounts         Account[]
  sentMessages     Message[] @relation("sentMessages")
  receivedMessages Message[] @relation("recievedMessages")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  id                Int    @id @default(autoincrement())
  provider          String
  providerAccountId String

  userId Int
  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

enum MessageType {
  TEXT
  IMAGE
  AUDIO
  DOCUMENT
  UNKNOW
}

model Message {
  id            Int         @id @default(autoincrement())
  type          MessageType @default(TEXT)
  content       String
  messageStatus String      @default("sent")

  senderId Int
  sender   User @relation("sentMessages", fields: [senderId], references: [id])

  receiverId Int
  receiver   User @relation("recievedMessages", fields: [receiverId], references: [id])

  createdAt DateTime @default(now())

  @@index([senderId])
  @@index([receiverId])
}
